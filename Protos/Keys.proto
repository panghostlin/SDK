syntax = "proto3";

/**************************************************************************
**	SERVICES
**************************************************************************/
service KeysService {
	rpc CreateKeys(CreateKeysRequest) returns (CreateKeysResponse) {}
	rpc CheckPassword(CheckPasswordRequest) returns (CheckPasswordResponse) {}
	rpc GetPublicKey(GetPublicKeyRequest) returns (GetPublicKeyResponse) {}
	rpc GetPrivateKey(GetPrivateKeyRequest) returns (GetPrivateKeyResponse) {}
	rpc GetKey(GetKeyRequest) returns (GetKeyResponse) {}

	rpc EncryptPicture(stream EncryptPictureRequest) returns (stream EncryptPictureResponse) {}
	rpc DecryptPicture(stream DecryptPictureRequest) returns (stream DecryptPictureResponse) {}
}

/**************************************************************************
**	RPCS - Members
**************************************************************************/
message CreateKeysRequest {string password = 1; string memberID = 2;}
message CreateKeysResponse {string hashKey = 1;}

message CheckPasswordRequest {string password = 1; string memberID = 2;}
message CheckPasswordResponse {string hashKey = 1;}

message GetPublicKeyRequest {string memberID = 1;}
message GetPublicKeyResponse {string publicKey = 1;}

message GetPrivateKeyRequest {string memberID = 1; string hashKey = 2;}
message GetPrivateKeyResponse {string privateKey = 1;}

message GetKeyRequest {string memberID = 1; string hashKey = 2;}
message GetKeyResponse {string publicKey = 1; string privateKey = 2;}

/**************************************************************************
**	RPCS - Pictures
**************************************************************************/
message EncryptPictureRequest {
	bytes chunk = 1;		//	The data to encrypt
	string memberID = 2;	//	The owner of the data/the encryptor
}
message EncryptPictureResponse {
	bytes chunk = 1;		//	The data encrypted
	string key = 2;			//	Which is the key to decrypt chunk ?
}

message DecryptPictureRequest {
	bytes chunk = 1;		//	The data to encrypt
	string memberID = 2;	//	The owner of the data/the encryptor
	string key = 3;			//	The key to decrypt
	string hashKey = 4;		//	The user decrypt key
}
message DecryptPictureResponse {
	string key = 1;
	bytes chunk = 2;
}