syntax = "proto3";

/**************************************************************************
**	SERVICES
**************************************************************************/
service PicturesService {
	rpc UploadPicture(stream UploadPictureRequest) returns (stream UploadPictureResponse);
	rpc DownloadPicture(DownloadPictureRequest) returns (stream DownloadPictureResponse);
	rpc DeletePictures(DeletePicturesRequest) returns (DeletePicturesResponse);

	rpc SetPicturesAlbum(SetPicturesAlbumRequest) returns (SetPicturesAlbumResponse);
	rpc SetPicturesDate(SetPicturesDateRequest) returns (SetPicturesDateResponse);

	rpc ListPicturesByMemberID(ListPicturesByMemberIDRequest) returns (ListPicturesByMemberIDResponse);
	rpc ListPicturesByAlbumID(ListPicturesByAlbumIDRequest) returns (ListPicturesByAlbumIDResponse);
}

/**************************************************************************
**	RPCS
**	Request & Response for the UploadPicture (stream) service
**	Purpose : Upload a chunck of data (the picture) and save it in the
**	database
**************************************************************************/
message UploadPictureRequest {
	bytes chunk = 1;
	string memberID = 2;
	string albumID = 3;
	UploadPictureRequest_Content content = 4;
	pictureCrypto crypto = 5;
}
message UploadPictureResponse {
	ListPictures_Content picture = 1;
	bool success = 2;
}

/**************************************************************************
**	RPCS
**	Request & Response for the DownloadPicture (stream) service
**	Purpose : download a chunck of data (the picture) to stream it to the
**	client
**************************************************************************/
message DownloadPictureRequest {
	string pictureID = 1;
	string pictureSize = 2;
}
message DownloadPictureResponse {
	bytes chunk = 1;
	string contentType = 2;
	uint32 width = 3;
	uint32 height = 4;
	string preview = 5;
	pictureCrypto crypto = 6;
}

/**************************************************************************
**	RPCS
**	Request & Response for the DeletePictures service
**************************************************************************/
message DeletePicturesRequest {repeated string picturesID = 1; string memberID = 2;}
message DeletePicturesResponse {bool success = 1;}

/**************************************************************************
**	RPCS
**	Request & Response for the SetPicturesAlbum service
**************************************************************************/
message SetPicturesAlbumRequest {
	repeated string groupIDs = 1;
	string albumID = 2;
	string memberID = 3;
}
message SetPicturesAlbumResponse {bool success = 1;}

/**************************************************************************
**	RPCS
**	Request & Response for the SetPicturesDate service
**************************************************************************/
message SetPicturesDateRequest {
	repeated string groupIDs = 1;
	string newDate = 2;
	string memberID = 3;
}
message SetPicturesDateResponse {bool success = 1;}

/**************************************************************************
**	RPCS
**	Request & Response for the ListPicturesByMemberID service
**************************************************************************/
message ListPicturesByMemberIDRequest {string memberID = 1;}
message ListPicturesByMemberIDResponse {
	repeated ListPictures_Content pictures = 1;
	map<string, ListPictures_Wrapper> picturesAlt = 2;
}

/**************************************************************************
**	RPCS
**	Request & Response for the ListPicturesByAlbumID service
**************************************************************************/
message ListPicturesByAlbumIDRequest {string memberID = 1; string albumID = 2;}
message ListPicturesByAlbumIDResponse {repeated ListPictures_Content pictures = 1;}

/**************************************************************************
**	HELPERS
**************************************************************************/
message	UploadPictureRequest_Content {
	string name = 1;
	string type = 2;
	string originalTime = 3;
	string sizeType = 4;
	int32 width = 5;
	int32 height = 6;
	string groupID = 7;
	string preview = 8;
}
message	pictureCrypto {
	string key = 1;
	string IV = 2;
}
message ListPictures_Wrapper {
	repeated ListPictures_Content picturesAlt = 1;
}
message ListPictures_Content {
	string uri = 1;
	string originalTime = 2;
	uint32 width = 3;
	uint32 height = 4;
}