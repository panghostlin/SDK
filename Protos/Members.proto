syntax = "proto3";

/**************************************************************************
**	SERVICES
**************************************************************************/
service MembersService {
	rpc CreateMember(CreateMemberRequest) returns (CreateMemberResponse) {}
	rpc LoginMember(LoginMemberRequest) returns (LoginMemberResponse) {}
	rpc CheckAccessToken(CheckAccessTokenRequest) returns (CheckAccessTokenResponse) {}
	rpc GetMember(GetMemberRequest) returns (GetMemberResponse) {}
}

/**************************************************************************
**	RPCS
**************************************************************************/
message CreateMemberRequest {
	string email = 1;
	string password = 2;
	string publicKey = 3;
	CryptedPrivate privateKey = 4;
}
message CreateMemberResponse {
	string memberID = 1;
	Cookie accessToken = 2;
	Keys keys = 3;
}


message LoginMemberRequest {
	string email = 1;
	string password = 2;
}
message LoginMemberResponse {
	string memberID = 1;
	Cookie accessToken = 2;
	Keys keys = 3;
}

message CheckAccessTokenRequest {
	string accessToken = 1;
}
message CheckAccessTokenResponse {
	bool success = 1;
	string memberID = 2;
	Cookie accessToken = 3;
}

message GetMemberRequest {
	string memberID = 1;
}
message GetMemberResponse {
	string memberID = 1;
	string email = 2;
	float usedStorage = 3;
	float fullUsedStorage = 4;
}


/**************************************************************************
**	HELPERS
**************************************************************************/
message	Cookie {
	string value = 1;
	int64 expiration = 2;
}
message	CryptedPrivate {
	string Key = 1; //base64 encrypted key
	string Salt = 2; //base64 salt
	string IV = 3; //base64 iv
}
message	Keys {
	string privateKey = 1; //base64 encrypted key
	string privateSalt = 2; //base64 salt
	string privateIV = 3; //base64 iv
	string publicKey = 4; //base64 key
}